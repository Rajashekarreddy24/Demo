{
  "version": 3,
  "sources": ["../../../../../node_modules/@ckeditor/ckeditor5-angular/fesm2020/ckeditor-ckeditor5-angular.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, Input, Output, NgModule } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n// A copy of @ckeditor/ckeditor5-utils/src/uid.js\n// A hash table of hex numbers to avoid using toString() in uid() which is costly.\n// [ '00', '01', '02', ..., 'fe', 'ff' ]\nfunction CKEditorComponent_ng_template_0_Template(rf, ctx) {}\nconst HEX_NUMBERS = new Array(256).fill(0).map((val, index) => ('0' + index.toString(16)).slice(-2));\n/**\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\n * 32 alphanumeric characters.\n *\n * **Note**: The characters the unique id is built from correspond to the hex number notation\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\n * by 16 8-bit numbers next to each other.\n *\n * @returns An unique id string.\n */\nfunction uid() {\n  // Let's create some positive random 32bit integers first.\n  //\n  // 1. Math.random() is a float between 0 and 1.\n  // 2. 0x100000000 is 2^32 = 4294967296.\n  // 3. >>> 0 enforces integer (in JS all numbers are floating point).\n  //\n  // For instance:\n  //\t\tMath.random() * 0x100000000 = 3366450031.853859\n  // but\n  //\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\n  const r1 = Math.random() * 0x100000000 >>> 0;\n  const r2 = Math.random() * 0x100000000 >>> 0;\n  const r3 = Math.random() * 0x100000000 >>> 0;\n  const r4 = Math.random() * 0x100000000 >>> 0;\n  // Make sure that id does not start with number.\n  return 'e' + HEX_NUMBERS[r1 >> 0 & 0xFF] + HEX_NUMBERS[r1 >> 8 & 0xFF] + HEX_NUMBERS[r1 >> 16 & 0xFF] + HEX_NUMBERS[r1 >> 24 & 0xFF] + HEX_NUMBERS[r2 >> 0 & 0xFF] + HEX_NUMBERS[r2 >> 8 & 0xFF] + HEX_NUMBERS[r2 >> 16 & 0xFF] + HEX_NUMBERS[r2 >> 24 & 0xFF] + HEX_NUMBERS[r3 >> 0 & 0xFF] + HEX_NUMBERS[r3 >> 8 & 0xFF] + HEX_NUMBERS[r3 >> 16 & 0xFF] + HEX_NUMBERS[r3 >> 24 & 0xFF] + HEX_NUMBERS[r4 >> 0 & 0xFF] + HEX_NUMBERS[r4 >> 8 & 0xFF] + HEX_NUMBERS[r4 >> 16 & 0xFF] + HEX_NUMBERS[r4 >> 24 & 0xFF];\n}\nconst ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID = 'Lock from Angular integration (@ckeditor/ckeditor5-angular)';\nclass CKEditorComponent {\n  constructor(elementRef, ngZone) {\n    /**\n     * The configuration of the editor.\n     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editorconfig-EditorConfig.html\n     * to learn more.\n     */\n    this.config = {};\n    /**\n     * The initial data of the editor. Useful when not using the ngModel.\n     * See https://angular.io/api/forms/NgModel to learn more.\n     */\n    this.data = '';\n    /**\n     * Tag name of the editor component.\n     *\n     * The default tag is 'div'.\n     */\n    this.tagName = 'div';\n    /**\n     * Allows disabling the two-way data binding mechanism. Disabling it can boost performance for large documents.\n     *\n     * When a component is connected using the [(ngModel)] or [formControl] directives and this value is set to true then none of the data\n     * will ever be synchronized.\n     *\n     * An integrator must call `editor.data.get()` manually once the application needs the editor's data.\n     * An editor instance can be received in the `ready()` callback.\n     */\n    this.disableTwoWayDataBinding = false;\n    /**\n     * Fires when the editor is ready. It corresponds with the `editor#ready`\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#event-ready\n     * event.\n     */\n    this.ready = new EventEmitter();\n    /**\n     * Fires when the content of the editor has changed. It corresponds with the `editor.model.document#change`\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_model_document-Document.html#event-change\n     * event.\n     */\n    this.change = new EventEmitter();\n    /**\n     * Fires when the editing view of the editor is blurred. It corresponds with the `editor.editing.view.document#blur`\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:blur\n     * event.\n     */\n    this.blur = new EventEmitter();\n    /**\n     * Fires when the editing view of the editor is focused. It corresponds with the `editor.editing.view.document#focus`\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:focus\n     * event.\n     */\n    this.focus = new EventEmitter();\n    /**\n     * Fires when the editor component crashes.\n     */\n    this.error = new EventEmitter();\n    /**\n     * If the component is read–only before the editor instance is created, it remembers that state,\n     * so the editor can become read–only once it is ready.\n     */\n    this.initiallyDisabled = false;\n    /**\n     * A lock flag preventing from calling the `cvaOnChange()` during setting editor data.\n     */\n    this.isEditorSettingData = false;\n    this.id = uid();\n    this.ngZone = ngZone;\n    this.elementRef = elementRef;\n    this.checkVersion();\n  }\n  /**\n   * When set `true`, the editor becomes read-only.\n   * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#member-isReadOnly\n   * to learn more.\n   */\n  set disabled(isDisabled) {\n    this.setDisabledState(isDisabled);\n  }\n  get disabled() {\n    if (this.editorInstance) {\n      return this.editorInstance.isReadOnly;\n    }\n    return this.initiallyDisabled;\n  }\n  /**\n   * The instance of the editor created by this component.\n   */\n  get editorInstance() {\n    let editorWatchdog = this.editorWatchdog;\n    if (this.watchdog) {\n      // Temporarily use the `_watchdogs` internal map as the `getItem()` method throws\n      // an error when the item is not registered yet.\n      // See https://github.com/ckeditor/ckeditor5-angular/issues/177.\n      // TODO should be able to change when new chages in Watcdog are released.\n      editorWatchdog = this.watchdog._watchdogs.get(this.id);\n    }\n    if (editorWatchdog) {\n      return editorWatchdog.editor;\n    }\n    return null;\n  }\n  getId() {\n    return this.id;\n  }\n  checkVersion() {\n    // To avoid issues with the community typings and CKEditor 5, let's treat window as any. See #342.\n    const {\n      CKEDITOR_VERSION\n    } = window;\n    if (!CKEDITOR_VERSION) {\n      return console.warn('Cannot find the \"CKEDITOR_VERSION\" in the \"window\" scope.');\n    }\n    const [major] = CKEDITOR_VERSION.split('.').map(Number);\n    if (major >= 42 || CKEDITOR_VERSION.startsWith('0.0.0')) {\n      return;\n    }\n    console.warn('The <CKEditor> component requires using CKEditor 5 in version 42+ or nightly build.');\n  }\n  // Implementing the OnChanges interface. Whenever the `data` property is changed, update the editor content.\n  ngOnChanges(changes) {\n    if (Object.prototype.hasOwnProperty.call(changes, 'data') && changes.data && !changes.data.isFirstChange()) {\n      this.writeValue(changes.data.currentValue);\n    }\n  }\n  // Implementing the AfterViewInit interface.\n  ngAfterViewInit() {\n    this.attachToWatchdog();\n  }\n  // Implementing the OnDestroy interface.\n  async ngOnDestroy() {\n    if (this.watchdog) {\n      await this.watchdog.remove(this.id);\n    } else if (this.editorWatchdog && this.editorWatchdog.editor) {\n      await this.editorWatchdog.destroy();\n      this.editorWatchdog = undefined;\n    }\n  }\n  // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n  writeValue(value) {\n    // This method is called with the `null` value when the form resets.\n    // A component's responsibility is to restore to the initial state.\n    if (value === null) {\n      value = '';\n    }\n    // If already initialized.\n    if (this.editorInstance) {\n      // The lock mechanism prevents from calling `cvaOnChange()` during changing\n      // the editor state. See #139\n      this.isEditorSettingData = true;\n      this.editorInstance.data.set(value);\n      this.isEditorSettingData = false;\n    }\n    // If not, wait for it to be ready; store the data.\n    else {\n      // If the editor element is already available, then update its content.\n      this.data = value;\n      // If not, then wait until it is ready\n      // and change data only for the first `ready` event.\n      this.ready.pipe(first()).subscribe(editor => {\n        editor.data.set(this.data);\n      });\n    }\n  }\n  // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n  registerOnChange(callback) {\n    this.cvaOnChange = callback;\n  }\n  // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n  registerOnTouched(callback) {\n    this.cvaOnTouched = callback;\n  }\n  // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n  setDisabledState(isDisabled) {\n    // If already initialized.\n    if (this.editorInstance) {\n      if (isDisabled) {\n        this.editorInstance.enableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\n      } else {\n        this.editorInstance.disableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\n      }\n    }\n    // Store the state anyway to use it once the editor is created.\n    this.initiallyDisabled = isDisabled;\n  }\n  /**\n   * Creates the editor instance, sets initial editor data, then integrates\n   * the editor with the Angular component. This method does not use the `editor.data.set()`\n   * because of the issue in the collaboration mode (#6).\n   */\n  attachToWatchdog() {\n    // TODO: elementOrData parameter type can be simplified to HTMLElemen after templated Watchdog will be released.\n    const creator = (elementOrData, config) => {\n      return this.ngZone.runOutsideAngular(async () => {\n        this.elementRef.nativeElement.appendChild(elementOrData);\n        const editor = await this.editor.create(elementOrData, config);\n        if (this.initiallyDisabled) {\n          editor.enableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\n        }\n        this.ngZone.run(() => {\n          this.ready.emit(editor);\n        });\n        this.setUpEditorEvents(editor);\n        return editor;\n      });\n    };\n    const destructor = async editor => {\n      await editor.destroy();\n      this.elementRef.nativeElement.removeChild(this.editorElement);\n    };\n    const emitError = e => {\n      // Do not run change detection by re-entering the Angular zone if the `error`\n      // emitter doesn't have any subscribers.\n      // Subscribers are pushed onto the list whenever `error` is listened inside the template:\n      // `<ckeditor (error)=\"onError(...)\"></ckeditor>`.\n      if (hasObservers(this.error)) {\n        this.ngZone.run(() => this.error.emit(e));\n      }\n    };\n    const element = document.createElement(this.tagName);\n    const config = this.getConfig();\n    this.editorElement = element;\n    // Based on the presence of the watchdog decide how to initialize the editor.\n    if (this.watchdog) {\n      // When the context watchdog is passed add the new item to it based on the passed configuration.\n      this.watchdog.add({\n        id: this.id,\n        type: 'editor',\n        creator,\n        destructor,\n        sourceElementOrData: element,\n        config\n      }).catch(e => {\n        emitError(e);\n      });\n      this.watchdog.on('itemError', (_, {\n        itemId\n      }) => {\n        if (itemId === this.id) {\n          emitError();\n        }\n      });\n    } else {\n      // In the other case create the watchdog by hand to keep the editor running.\n      const editorWatchdog = new this.editor.EditorWatchdog(this.editor, this.editorWatchdogConfig);\n      editorWatchdog.setCreator(creator);\n      editorWatchdog.setDestructor(destructor);\n      editorWatchdog.on('error', emitError);\n      this.editorWatchdog = editorWatchdog;\n      this.ngZone.runOutsideAngular(() => {\n        // Note: must be called outside of the Angular zone too because `create` is calling\n        // `_startErrorHandling` within a microtask which sets up `error` listener on the window.\n        editorWatchdog.create(element, config).catch(e => {\n          emitError(e);\n        });\n      });\n    }\n  }\n  getConfig() {\n    if (this.data && this.config.initialData) {\n      throw new Error('Editor data should be provided either using `config.initialData` or `data` properties.');\n    }\n    const config = {\n      ...this.config\n    };\n    // Merge two possible ways of providing data into the `config.initialData` field.\n    const initialData = this.config.initialData || this.data;\n    if (initialData) {\n      // Define the `config.initialData` only when the initial content is specified.\n      config.initialData = initialData;\n    }\n    return config;\n  }\n  /**\n   * Integrates the editor with the component by attaching related event listeners.\n   */\n  setUpEditorEvents(editor) {\n    const modelDocument = editor.model.document;\n    const viewDocument = editor.editing.view.document;\n    modelDocument.on('change:data', evt => {\n      this.ngZone.run(() => {\n        if (this.disableTwoWayDataBinding) {\n          return;\n        }\n        if (this.cvaOnChange && !this.isEditorSettingData) {\n          const data = editor.data.get();\n          this.cvaOnChange(data);\n        }\n        this.change.emit({\n          event: evt,\n          editor\n        });\n      });\n    });\n    viewDocument.on('focus', evt => {\n      this.ngZone.run(() => {\n        this.focus.emit({\n          event: evt,\n          editor\n        });\n      });\n    });\n    viewDocument.on('blur', evt => {\n      this.ngZone.run(() => {\n        if (this.cvaOnTouched) {\n          this.cvaOnTouched();\n        }\n        this.blur.emit({\n          event: evt,\n          editor\n        });\n      });\n    });\n  }\n}\nCKEditorComponent.ɵfac = function CKEditorComponent_Factory(t) {\n  return new (t || CKEditorComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nCKEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CKEditorComponent,\n  selectors: [[\"ckeditor\"]],\n  inputs: {\n    editor: \"editor\",\n    config: \"config\",\n    data: \"data\",\n    tagName: \"tagName\",\n    watchdog: \"watchdog\",\n    editorWatchdogConfig: \"editorWatchdogConfig\",\n    disableTwoWayDataBinding: \"disableTwoWayDataBinding\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    ready: \"ready\",\n    change: \"change\",\n    blur: \"blur\",\n    focus: \"focus\",\n    error: \"error\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => CKEditorComponent),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  template: function CKEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CKEditorComponent_ng_template_0_Template, 0, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CKEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ckeditor',\n      template: '<ng-template></ng-template>',\n      // Integration with @angular/forms.\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => CKEditorComponent),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    editor: [{\n      type: Input\n    }],\n    config: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    tagName: [{\n      type: Input\n    }],\n    watchdog: [{\n      type: Input\n    }],\n    editorWatchdogConfig: [{\n      type: Input\n    }],\n    disableTwoWayDataBinding: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    error: [{\n      type: Output\n    }]\n  });\n})();\nfunction hasObservers(emitter) {\n  // Cast to `any` because `observed` property is available in RxJS >= 7.2.0.\n  // Fallback to checking `observers` list if this property is not defined.\n  return emitter.observed || emitter.observers.length > 0;\n}\n\n/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nclass CKEditorModule {}\nCKEditorModule.ɵfac = function CKEditorModule_Factory(t) {\n  return new (t || CKEditorModule)();\n};\nCKEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CKEditorModule,\n  declarations: [CKEditorComponent],\n  imports: [FormsModule, CommonModule],\n  exports: [CKEditorComponent]\n});\nCKEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[FormsModule, CommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CKEditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [FormsModule, CommonModule],\n      declarations: [CKEditorComponent],\n      exports: [CKEditorComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CKEditorComponent, CKEditorModule };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,SAAS,yCAAyC,IAAI,KAAK;AAAC;AAC5D,IAAM,cAAc,IAAI,MAAM,GAAG,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,WAAW,MAAM,MAAM,SAAS,EAAE,GAAG,MAAM,EAAE,CAAC;AAWnG,SAAS,MAAM;AAWb,QAAM,KAAK,KAAK,OAAO,IAAI,eAAgB;AAC3C,QAAM,KAAK,KAAK,OAAO,IAAI,eAAgB;AAC3C,QAAM,KAAK,KAAK,OAAO,IAAI,eAAgB;AAC3C,QAAM,KAAK,KAAK,OAAO,IAAI,eAAgB;AAE3C,SAAO,MAAM,YAAY,MAAM,IAAI,GAAI,IAAI,YAAY,MAAM,IAAI,GAAI,IAAI,YAAY,MAAM,KAAK,GAAI,IAAI,YAAY,MAAM,KAAK,GAAI,IAAI,YAAY,MAAM,IAAI,GAAI,IAAI,YAAY,MAAM,IAAI,GAAI,IAAI,YAAY,MAAM,KAAK,GAAI,IAAI,YAAY,MAAM,KAAK,GAAI,IAAI,YAAY,MAAM,IAAI,GAAI,IAAI,YAAY,MAAM,IAAI,GAAI,IAAI,YAAY,MAAM,KAAK,GAAI,IAAI,YAAY,MAAM,KAAK,GAAI,IAAI,YAAY,MAAM,IAAI,GAAI,IAAI,YAAY,MAAM,IAAI,GAAI,IAAI,YAAY,MAAM,KAAK,GAAI,IAAI,YAAY,MAAM,KAAK,GAAI;AACnf;AACA,IAAM,wCAAwC;AAC9C,IAAM,oBAAN,MAAwB;AAAA,EACtB,YAAY,YAAY,QAAQ;AAM9B,SAAK,SAAS,CAAC;AAKf,SAAK,OAAO;AAMZ,SAAK,UAAU;AAUf,SAAK,2BAA2B;AAMhC,SAAK,QAAQ,IAAI,aAAa;AAM9B,SAAK,SAAS,IAAI,aAAa;AAM/B,SAAK,OAAO,IAAI,aAAa;AAM7B,SAAK,QAAQ,IAAI,aAAa;AAI9B,SAAK,QAAQ,IAAI,aAAa;AAK9B,SAAK,oBAAoB;AAIzB,SAAK,sBAAsB;AAC3B,SAAK,KAAK,IAAI;AACd,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,SAAS,YAAY;AACvB,SAAK,iBAAiB,UAAU;AAAA,EAClC;AAAA,EACA,IAAI,WAAW;AACb,QAAI,KAAK,gBAAgB;AACvB,aAAO,KAAK,eAAe;AAAA,IAC7B;AACA,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,iBAAiB;AACnB,QAAI,iBAAiB,KAAK;AAC1B,QAAI,KAAK,UAAU;AAKjB,uBAAiB,KAAK,SAAS,WAAW,IAAI,KAAK,EAAE;AAAA,IACvD;AACA,QAAI,gBAAgB;AAClB,aAAO,eAAe;AAAA,IACxB;AACA,WAAO;AAAA,EACT;AAAA,EACA,QAAQ;AACN,WAAO,KAAK;AAAA,EACd;AAAA,EACA,eAAe;AAEb,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,CAAC,kBAAkB;AACrB,aAAO,QAAQ,KAAK,2DAA2D;AAAA,IACjF;AACA,UAAM,CAAC,KAAK,IAAI,iBAAiB,MAAM,GAAG,EAAE,IAAI,MAAM;AACtD,QAAI,SAAS,MAAM,iBAAiB,WAAW,OAAO,GAAG;AACvD;AAAA,IACF;AACA,YAAQ,KAAK,qFAAqF;AAAA,EACpG;AAAA;AAAA,EAEA,YAAY,SAAS;AACnB,QAAI,OAAO,UAAU,eAAe,KAAK,SAAS,MAAM,KAAK,QAAQ,QAAQ,CAAC,QAAQ,KAAK,cAAc,GAAG;AAC1G,WAAK,WAAW,QAAQ,KAAK,YAAY;AAAA,IAC3C;AAAA,EACF;AAAA;AAAA,EAEA,kBAAkB;AAChB,SAAK,iBAAiB;AAAA,EACxB;AAAA;AAAA,EAEM,cAAc;AAAA;AAClB,UAAI,KAAK,UAAU;AACjB,cAAM,KAAK,SAAS,OAAO,KAAK,EAAE;AAAA,MACpC,WAAW,KAAK,kBAAkB,KAAK,eAAe,QAAQ;AAC5D,cAAM,KAAK,eAAe,QAAQ;AAClC,aAAK,iBAAiB;AAAA,MACxB;AAAA,IACF;AAAA;AAAA;AAAA,EAEA,WAAW,OAAO;AAGhB,QAAI,UAAU,MAAM;AAClB,cAAQ;AAAA,IACV;AAEA,QAAI,KAAK,gBAAgB;AAGvB,WAAK,sBAAsB;AAC3B,WAAK,eAAe,KAAK,IAAI,KAAK;AAClC,WAAK,sBAAsB;AAAA,IAC7B,OAEK;AAEH,WAAK,OAAO;AAGZ,WAAK,MAAM,KAAK,MAAM,CAAC,EAAE,UAAU,YAAU;AAC3C,eAAO,KAAK,IAAI,KAAK,IAAI;AAAA,MAC3B,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA,EAEA,iBAAiB,UAAU;AACzB,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA,EAEA,kBAAkB,UAAU;AAC1B,SAAK,eAAe;AAAA,EACtB;AAAA;AAAA,EAEA,iBAAiB,YAAY;AAE3B,QAAI,KAAK,gBAAgB;AACvB,UAAI,YAAY;AACd,aAAK,eAAe,mBAAmB,qCAAqC;AAAA,MAC9E,OAAO;AACL,aAAK,eAAe,oBAAoB,qCAAqC;AAAA,MAC/E;AAAA,IACF;AAEA,SAAK,oBAAoB;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,mBAAmB;AAEjB,UAAM,UAAU,CAAC,eAAeA,YAAW;AACzC,aAAO,KAAK,OAAO,kBAAkB,MAAY;AAC/C,aAAK,WAAW,cAAc,YAAY,aAAa;AACvD,cAAM,SAAS,MAAM,KAAK,OAAO,OAAO,eAAeA,OAAM;AAC7D,YAAI,KAAK,mBAAmB;AAC1B,iBAAO,mBAAmB,qCAAqC;AAAA,QACjE;AACA,aAAK,OAAO,IAAI,MAAM;AACpB,eAAK,MAAM,KAAK,MAAM;AAAA,QACxB,CAAC;AACD,aAAK,kBAAkB,MAAM;AAC7B,eAAO;AAAA,MACT,EAAC;AAAA,IACH;AACA,UAAM,aAAa,CAAM,WAAU;AACjC,YAAM,OAAO,QAAQ;AACrB,WAAK,WAAW,cAAc,YAAY,KAAK,aAAa;AAAA,IAC9D;AACA,UAAM,YAAY,OAAK;AAKrB,UAAI,aAAa,KAAK,KAAK,GAAG;AAC5B,aAAK,OAAO,IAAI,MAAM,KAAK,MAAM,KAAK,CAAC,CAAC;AAAA,MAC1C;AAAA,IACF;AACA,UAAM,UAAU,SAAS,cAAc,KAAK,OAAO;AACnD,UAAM,SAAS,KAAK,UAAU;AAC9B,SAAK,gBAAgB;AAErB,QAAI,KAAK,UAAU;AAEjB,WAAK,SAAS,IAAI;AAAA,QAChB,IAAI,KAAK;AAAA,QACT,MAAM;AAAA,QACN;AAAA,QACA;AAAA,QACA,qBAAqB;AAAA,QACrB;AAAA,MACF,CAAC,EAAE,MAAM,OAAK;AACZ,kBAAU,CAAC;AAAA,MACb,CAAC;AACD,WAAK,SAAS,GAAG,aAAa,CAAC,GAAG;AAAA,QAChC;AAAA,MACF,MAAM;AACJ,YAAI,WAAW,KAAK,IAAI;AACtB,oBAAU;AAAA,QACZ;AAAA,MACF,CAAC;AAAA,IACH,OAAO;AAEL,YAAM,iBAAiB,IAAI,KAAK,OAAO,eAAe,KAAK,QAAQ,KAAK,oBAAoB;AAC5F,qBAAe,WAAW,OAAO;AACjC,qBAAe,cAAc,UAAU;AACvC,qBAAe,GAAG,SAAS,SAAS;AACpC,WAAK,iBAAiB;AACtB,WAAK,OAAO,kBAAkB,MAAM;AAGlC,uBAAe,OAAO,SAAS,MAAM,EAAE,MAAM,OAAK;AAChD,oBAAU,CAAC;AAAA,QACb,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,YAAY;AACV,QAAI,KAAK,QAAQ,KAAK,OAAO,aAAa;AACxC,YAAM,IAAI,MAAM,wFAAwF;AAAA,IAC1G;AACA,UAAM,SAAS,mBACV,KAAK;AAGV,UAAM,cAAc,KAAK,OAAO,eAAe,KAAK;AACpD,QAAI,aAAa;AAEf,aAAO,cAAc;AAAA,IACvB;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,kBAAkB,QAAQ;AACxB,UAAM,gBAAgB,OAAO,MAAM;AACnC,UAAM,eAAe,OAAO,QAAQ,KAAK;AACzC,kBAAc,GAAG,eAAe,SAAO;AACrC,WAAK,OAAO,IAAI,MAAM;AACpB,YAAI,KAAK,0BAA0B;AACjC;AAAA,QACF;AACA,YAAI,KAAK,eAAe,CAAC,KAAK,qBAAqB;AACjD,gBAAM,OAAO,OAAO,KAAK,IAAI;AAC7B,eAAK,YAAY,IAAI;AAAA,QACvB;AACA,aAAK,OAAO,KAAK;AAAA,UACf,OAAO;AAAA,UACP;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AACD,iBAAa,GAAG,SAAS,SAAO;AAC9B,WAAK,OAAO,IAAI,MAAM;AACpB,aAAK,MAAM,KAAK;AAAA,UACd,OAAO;AAAA,UACP;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AACD,iBAAa,GAAG,QAAQ,SAAO;AAC7B,WAAK,OAAO,IAAI,MAAM;AACpB,YAAI,KAAK,cAAc;AACrB,eAAK,aAAa;AAAA,QACpB;AACA,aAAK,KAAK,KAAK;AAAA,UACb,OAAO;AAAA,UACP;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AACF;AACA,kBAAkB,OAAO,SAAS,0BAA0B,GAAG;AAC7D,SAAO,KAAK,KAAK,mBAAsB,kBAAqB,UAAU,GAAM,kBAAqB,MAAM,CAAC;AAC1G;AACA,kBAAkB,OAAyB,kBAAkB;AAAA,EAC3D,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,UAAU,CAAC;AAAA,EACxB,QAAQ;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,IACV,sBAAsB;AAAA,IACtB,0BAA0B;AAAA,IAC1B,UAAU;AAAA,EACZ;AAAA,EACA,SAAS;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,UAAU,CAAI,mBAAmB,CAAC;AAAA,IAChC,SAAS;AAAA;AAAA,IAET,aAAa,WAAW,MAAM,iBAAiB;AAAA,IAC/C,OAAO;AAAA,EACT,CAAC,CAAC,GAAM,oBAAoB;AAAA,EAC5B,OAAO;AAAA,EACP,MAAM;AAAA,EACN,UAAU,SAAS,2BAA2B,IAAI,KAAK;AACrD,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,GAAG,0CAA0C,GAAG,GAAG,aAAa;AAAA,IAChF;AAAA,EACF;AAAA,EACA,eAAe;AACjB,CAAC;AAAA,CACA,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,mBAAmB,CAAC;AAAA,IAC1F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA;AAAA,MAEV,WAAW,CAAC;AAAA,QACV,SAAS;AAAA;AAAA,QAET,aAAa,WAAW,MAAM,iBAAiB;AAAA,QAC/C,OAAO;AAAA,MACT,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC,GAAG,WAAY;AACd,WAAO,CAAC;AAAA,MACN,MAAS;AAAA,IACX,GAAG;AAAA,MACD,MAAS;AAAA,IACX,CAAC;AAAA,EACH,GAAG;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,sBAAsB,CAAC;AAAA,MACrB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,0BAA0B,CAAC;AAAA,MACzB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,SAAS,aAAa,SAAS;AAG7B,SAAO,QAAQ,YAAY,QAAQ,UAAU,SAAS;AACxD;AAMA,IAAM,iBAAN,MAAqB;AAAC;AACtB,eAAe,OAAO,SAAS,uBAAuB,GAAG;AACvD,SAAO,KAAK,KAAK,gBAAgB;AACnC;AACA,eAAe,OAAyB,iBAAiB;AAAA,EACvD,MAAM;AAAA,EACN,cAAc,CAAC,iBAAiB;AAAA,EAChC,SAAS,CAAC,aAAa,YAAY;AAAA,EACnC,SAAS,CAAC,iBAAiB;AAC7B,CAAC;AACD,eAAe,OAAyB,iBAAiB;AAAA,EACvD,SAAS,CAAC,CAAC,aAAa,YAAY,CAAC;AACvC,CAAC;AAAA,CACA,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,aAAa,YAAY;AAAA,MACnC,cAAc,CAAC,iBAAiB;AAAA,MAChC,SAAS,CAAC,iBAAiB;AAAA,IAC7B,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;",
  "names": ["config"]
}
